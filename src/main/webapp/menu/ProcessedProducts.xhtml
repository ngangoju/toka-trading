<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:a="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:p="http://primefaces.org/ui" xmlns:b="http://bootsfaces.net/ui">
<h:body>
	<ui:composition template="/template/common/commonLayout.xhtml">
		<ui:define name="content">
			<h:body>
				<!-- <link rel="stylesheet"
					href="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" />
				<script
					src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
				<script
					src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"></script>
				<script
					src="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"></script> -->
				<!-- <script
					src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js">
					
				</script> -->
				<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
				<style type="text/css">
@media ( max-width :960) {
	.myChartDiv {
		width: 100%;
	}
}
/*  body {
	font-family: Arial;
	margin: 80px 100px 10px 100px;
	padding: 0;
	color: white;
	text-align: center;
	background: #555652;
} */
.container {
	color: #E8E9EB;
	/* background: #222; */ /* 
	border: #555652 1px solid; */
	padding: 5px;
	width: 80%;
}
</style>
				<div class="panel panel-info">
					<!-- Default panel contents -->
					<div class="panel-heading">
						<ui:repeat var="time" value="#">

							<span style="color: white; font-size: 10pt"> <label
								style="font: italic bold 14px/25px Georgia, serif; margin-left: 25%;">Daily
									successful served order management </label>
							</span>


						</ui:repeat>
					</div>
					<div class="panel-body"
						style="border: 0px solid blue; margin-top: 4px; height: auto; font-family: Open Sans sans-serif !important; font-size: 15px !important;">



						<h:form>
							<h:panelGroup layout="block"
								rendered="#{not productAssignmentController.valid and not facesContext.validationFailed}">
								<ul>
									<ui:repeat value="#{facesContext.messageList}"
										var="facesMessage">
										<li class="alert alert-danger"
											style="list-style: none; background-color: #FF2400; color: white; font-size: 12pt">
											<center>
												<h:outputText value="#{facesMessage.summary}" escape="false" />
											</center>
										</li>
									</ui:repeat>
								</ul>
							</h:panelGroup>

							<h:panelGroup layout="block"
								rendered="#{productAssignmentController.valid and  not facesContext.validationFailed}">
								<ul>
									<ui:repeat value="#{facesContext.messageList}"
										var="facesMessage">
										<li
											style="list-style: none; background-color: #32CD32; color: white; margin-left: -4.9%; font-size: 12pt"
											class="alert alert-success"><h:outputText
												value="#{facesMessage.summary}" escape="false" /></li>
									</ui:repeat>
								</ul>
							</h:panelGroup>

							<h:panelGroup rendered="#{productAssignmentController.rendered}">
							<h:form>
									
								<div class="col-md-4 col-sm-6 col-xs-12">
									<label class="control-label">From<span
													style="color: red; font-size: 15px">*</span></label>
													<div class="input-group">
														<span class="input-group-addon"><i
															class="glyphicon glyphicon-calendar" aria-hidden="true"></i></span>
														<h:inputText locale="#{facesContext.viewRoot.locale}"
															a:placeholder="dd/MM/yyyy" autocomplete="off" id="from_date_id"
															value="#{productAssignmentController.startDate}"
															binding="#{from_date_id}" class="form-control"
															escape="true" maxlength="35" required="true"
															converterMessage="#{msg['validation.message.DATE_FORMAT']}"
															requiredMessage="#{msg['dob.message']}">
															<f:convertDateTime type="date" dateType="short"
																pattern="dd/MM/yyyy" />
															<f:validateLength maximum="35" />
														</h:inputText>
												</div>
												<h:message errorClass="errorMsg1" for="from_date_id"></h:message>
								</div>
								
								<div class="col-md-4 col-sm-6 col-xs-12">
									<label class="control-label">To<span
													style="color: red; font-size: 15px">*</span></label>
													<div class="input-group">
														<span class="input-group-addon"><i
															class="glyphicon glyphicon-calendar" aria-hidden="true"></i></span>
														<h:inputText locale="#{facesContext.viewRoot.locale}"
															a:placeholder="dd/MM/yyyy" autocomplete="off" id="to_date_id"
															value="#{productAssignmentController.endDate}"
															binding="#{to_date_id}" class="form-control"
															escape="true" maxlength="35" required="true"
															converterMessage="#{msg['validation.message.DATE_FORMAT']}"
															requiredMessage="#{msg['dob.message']}">
															<f:convertDateTime type="date" dateType="short"
																pattern="dd/MM/yyyy" />
															<f:validateLength maximum="35" />
														</h:inputText>
													</div>
												<h:message errorClass="errorMsg1" for="to_date_id"></h:message>
								</div>
								
								
								<div class="col-md-4 col-sm-6 col-xs-12">
									<label class="control-label">Branches<span
													style="color: red; font-size: 15px">*</span></label>
										<h:selectOneMenu id="BranchId" styleClass="form-control"
											required="false" value="#{productAssignmentController.branchId}"
											requiredMessage="#{msg['parent.task.required']}">
											<f:selectItem
												itemLabel="#{msg['common.message.select.PLACEHOLDER']}"
												itemValue="#{null}" escapeItem="true" />
											<f:selectItems value="#{productAssignmentController.branchDetails}"
												var="option" itemValue="#{option.branchId}"
												itemLabel="#{option.branchName}" itemLabelEscaped="true" />
											<!-- 									<f:ajax render="@form" execute="@form" onevent="showProgress" /> -->
										</h:selectOneMenu>
												<h:message errorClass="errorMsg1" for="BranchId"></h:message>
									</div>
								
								
							<br/>
							<br/>
							<br/>
							<br/>
								<div class="form-group pt-auto">
									<h:commandButton style=" font: italic bold 13px/20px Georgia, serif;"
										class="btn btn-primary submit-btn center-block"
										action="#{productAssignmentController.generateBranchReview}"
										value="#{msg['label.print.message.submit']}">
									</h:commandButton>
								</div>
							</h:form>		
							<br/>
								<h2 style="font: italic bold 13px/16px Georgia, serif; text-align:center;">
									#{msg['label.show.message.graph']}
								</h2>

								<div
									style="border-bottom: 1.5px solid #91DBFA; margin-bottom: 6px; margin-top: 6px;"></div>
								<div class="row" style="font: italic bold 13px/16px Georgia, serif;">
									<ui:repeat value="#{productAssignmentController.branchDetails}"
										var="bList">
										<div class="col-md-4 col-sm-6">
											<div class="circle-tile2">

												<div class="circle-tile-heading2 blue2">
													<i class="glyphicon glyphicon-star-empty fa-fw fa-3x"></i>
												</div>

												<div class="circle-tile-content2 blue2">
													<div class="circle-tile-description text-faded2">
														#{bList.branchName}</div>
													<div class="circle-tile-number2 text-faded2">
														<span class="fa fa-building-o"></span> <span
															id="sparklineB"></span>
													</div>
													<div class="circle-tile-description text-faded2">situated
														at #{bList.location.districtName_en} district</div>
													<div class="circle-tile-number2 text-faded2">
														<span id="sparklineB"></span>
													</div>
													<h:commandButton class="btn btn-info btn-xlg btn-block"
														action="#{productAssignmentController.branchProductStat(bList)}"
														value="View product sold"
														style="font-family: Open Sans sans-serif !important; font-size: 15px !important;">
														<f:ajax render="@form" execute="@form"
															onevent="showProgress" />
													</h:commandButton>
												</div>
											</div>

										</div>

									</ui:repeat>
								</div>
							</h:panelGroup>

								
							<div class="row">
							<h:panelGroup rendered="#{productAssignmentController.renderheader}">
								<div class="form-group" style="margin-left: 5%;">
									<label for="exampleInputCity1" class="cols-sm-2 control-label">ENTER
										ANY DATE FOR DAILY SUCCESSFUL SERVED ORDER STATISTICS<span
										style="color: red; font-size: 15px">*</span>
									</label>

									<div class="input-group">
										<span class="input-group-addon"><i
											class="glyphicon glyphicon-calendar" aria-hidden="true"></i></span>
										<h:inputText locale="#{facesContext.viewRoot.locale}"
											a:placeholder="dd/MM/yyyy" autocomplete="off"
											id="from_dob_date_id"
											value="#{productAssignmentController.todayDate}"
											binding="#{from_dob_date_id}" class="form-control"
											escape="true" maxlength="35" required="true"
											converterMessage="#{msg['validation.message.DATE_FORMAT']}"
											requiredMessage="#{msg['todaydate.message']}">
											<f:convertDateTime type="date" dateType="short"
												pattern="dd/MM/yyyy" />
											<f:validateLength maximum="35" />
										</h:inputText>

									</div>
									<h:message errorClass="errorMsg1" for="from_dob_date_id"></h:message>
									<br />

									<h:commandButton a:type="submit" class="btn btn-success mr-2"
										style=" font: italic bold 13px/20px Georgia, serif; margin-top:10px"
										action="#{productAssignmentController.overalldailyOrderStatistics}"
										value="#{msg['label.subimit.message.submit']}">
									</h:commandButton>
								</div></h:panelGroup>
								
								<h:panelGroup
									rendered="#{productAssignmentController.renderOrder}">
									<div class="container">
										<h1 style="font-family: Arial; font-size: 13pt">DAILY
											SUCCESSFUL SERVED ORDER AND SORTED BY BRANCHES</h1>
										<!-- 	<canvas id="taskperformance"
												style="height:300px;margin-top:5%;font-size:12pt"></canvas> -->
										<canvas id="taskperformance"
											style=" border: 1px solid #f04c91; margin-top: 10px;width:25%;"></canvas>


									</div>
								</h:panelGroup>
								<h:form class="form-horizontal">
									<div class="form-group">
										<h:inputText class="overallDailOrderProcessed"
											style="display:none;"
											value="#{productAssignmentController.overallDailOrderProcessed}"></h:inputText>



									</div>

								</h:form>
							</div>
							<!-- <div id="chartContainer" style="height: 360px; width: 100%;"></div>
 -->

							<!-- 	<div class="container">
					<h1>USE CHART.JS WITH MYSQL DATASETS</h1>
					<canvas id="chart"
						style="width: 100%; height: 65vh; border: 1px solid #555652; margin-top: 10px;"></canvas>
				</div> -->
						</h:form>


					</div>
				</div>

				<script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
				<!-- 
				<script
					src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script> -->
				<script type="text/javascript"
					src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
				<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
				
				<script>
					$(function Myname() {
						var taskperform = document.getElementById(
								'taskperformance').getContext('2d');
						var replaceTaskData = $(".overallDailOrderProcessed")
								.val();
						var taskReq = replaceTaskData.replace("id", "x");
						taskReq.replace("Rate", "y");

						console.log(taskReq);
						//CONCERN OVERALL TASK PROGRESS 
						var amount = [];

						var taskname = [];
						function recusiveTask(n, testTaskData, n2) {
							if (n2 >= n) {
								amount.push(testTaskData[n].quantity);

								taskname.push(testTaskData[n].branch);
								recusiveTask(n + 1, testTaskData, n2);
							}
						}

						var testTaskData = JSON.parse($(
								".overallDailOrderProcessed").val());
						console.log("::::RESULT::::");
						recusiveTask(0, testTaskData, testTaskData.length - 1);

						var mytaskChart = new Chart(taskperform, {
							type : 'bar',
							data : {
								labels : taskname,
								datasets : [ {
									label : '# Quantity sold',
									data : amount,
									backgroundColor : [
											'rgba(255, 99, 132, 0.2)',
											'rgba(54, 162, 235, 0.2)',
											'rgba(255, 206, 86, 0.2)',
											'rgba(75, 192, 192, 0.2)',
											'rgba(153, 102, 255, 0.2)',
											'rgba(255, 159, 64, 0.2)' ],
									borderColor : [ 'rgba(255,99,132,1)',
											'rgba(54, 162, 235, 1)',
											'rgba(255, 206, 86, 1)',
											'rgba(75, 192, 192, 1)',
											'rgba(153, 102, 255, 1)',
											'rgba(255, 159, 64, 1)' ],
									borderWidth : 1,
									fill : false
								} ]
							},
							options : {
								scales : {
									yAxes : [ {
										ticks : {
											beginAtZero : true
										},
										gridLines : {
											display : false
										},
									} ],
									xAxes : [ {
										gridLines : {
											display : false
										},
									} ]
								},
								legend : {
									display : false
								},

								elements : {
									point : {
										radius : 0
									}
								},
								title : {
									display : true,

									fontSize : 20,

								},

							}
						});

					});
				</script>
				<!-- <script>
				var chart = new CanvasJS.Chart("chartContainer",
						{
						  axisX:{
						    gridThickness: 0,
						    tickLength: 0,
						    lineThickness: 0,
						    labelFormatter: function(){
						      return " ";
						    }
						  },
						  axisY:{
						    gridThickness: 0,
						    tickLength: 0,
						    lineThickness: 0,
						    labelFormatter: function(){
						      return " ";
						    }
						  },
							data: [
							{
								type: "splineArea",
								dataPoints: [
									{ x: 10, y: 71 },
									{ x: 20, y: 55 },
									{ x: 30, y: 50 },
									{ x: 40, y: 65 },
									{ x: 50, y: 95 },
									{ x: 60, y: 68 },
									{ x: 70, y: 28 },
									{ x: 80, y: 34 },
									{ x: 90, y: 14 }
								]
							}					
							]
						});

						chart.render();
				</script> -->

				<!-- 	<script>
					var ctx = document.getElementById("chart").getContext('2d');
					var replaceTaskData = $(".overallDailOrderProcessed").val();
					var taskReq = replaceTaskData.replace("id", "x");
					taskReq.replace("Rate", "y");

					console.log(taskReq);
					//CONCERN OVERALL TASK PROGRESS 
					var amount = [];

					var taskname = [];
					function recusiveTask(n, testTaskData, n2) {
						if (n2 >= n) {
							amount.push(testTaskData[n].quantity);

							taskname.push(testTaskData[n].branch);
							recusiveTask(n + 1, testTaskData, n2);
						}
					}

					var testTaskData = JSON.parse($(
							".overallDailOrderProcessed").val());
					console.log("::::RESULT::::");
					recusiveTask(0, testTaskData, testTaskData.length - 1);
					var myChart = new Chart(ctx, {
						type : 'line',
						data : {
							labels : taskname,
							datasets : [ {
								label : 'Data 1',
								data : amount,
								backgroundColor : 'transparent',
								borderColor : 'rgba(255,99,132)',
								borderWidth : 3
							},

							/* {
								label : 'Data 2',
								data : amount,
								backgroundColor : 'transparent',
								borderColor : 'rgba(0,255,255)',
								borderWidth : 1,
								fill : true
							} */ ]
						},

						options : {
							scales : {
								scales : {
									/* yAxes : [ {
										beginAtZero : false
									} ],
									xAxes : [ {
										autoskip : true,
										maxTicketsLimit : 20
									} ] */
						 axisX:{
							    gridThickness: 0,
							    tickLength: 0,
							    lineThickness: 0,
							    labelFormatter: function(){
							      return " ";
							    }
							  },
							  axisY:{
							    gridThickness: 0,
							    tickLength: 0,
							    lineThickness: 0,
							    labelFormatter: function(){
							      return " ";
							    }
							  },
								}
							},
							tooltips : {
								mode : 'index'
							},
							legend : {
								display : true,
								position : 'top',
								labels : {
									fontColor : 'rgb(255,255,255)',
									fontSize : 16
								}
							}
						}
					});
				</script> -->
			</h:body>
		</ui:define>
	</ui:composition>
</h:body>

</html>
